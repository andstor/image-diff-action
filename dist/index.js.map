{"version":3,"file":"index.js","sources":["../webpack://image-diff-action/./node_modules/@actions/core/lib/command.js","../webpack://image-diff-action/./node_modules/@actions/core/lib/core.js","../webpack://image-diff-action/./node_modules/canvas/index.js","../webpack://image-diff-action/./node_modules/canvas/lib/DOMMatrix.js","../webpack://image-diff-action/./node_modules/canvas/lib/bindings.js","../webpack://image-diff-action/./node_modules/canvas/lib/canvas.js","../webpack://image-diff-action/./node_modules/canvas/lib/context2d.js","../webpack://image-diff-action/./node_modules/canvas/lib/image.js","../webpack://image-diff-action/./node_modules/canvas/lib/jpegstream.js","../webpack://image-diff-action/./node_modules/canvas/lib/parse-font.js","../webpack://image-diff-action/./node_modules/canvas/lib/pdfstream.js","../webpack://image-diff-action/./node_modules/canvas/lib/pngstream.js","../webpack://image-diff-action/./node_modules/decompress-response/index.js","../webpack://image-diff-action/./node_modules/mimic-response/index.js","../webpack://image-diff-action/./node_modules/once/once.js","../webpack://image-diff-action/./node_modules/resemblejs/compareImages.js","../webpack://image-diff-action/./node_modules/resemblejs/resemble.js","../webpack://image-diff-action/./node_modules/simple-concat/index.js","../webpack://image-diff-action/./node_modules/simple-get/index.js","../webpack://image-diff-action/./node_modules/wrappy/wrappy.js","../webpack://image-diff-action/./src/index.js","../webpack://image-diff-action/./src/utils.js","../webpack://image-diff-action/./node_modules/canvas/build/Release/canvas.node","../webpack://image-diff-action/external \"fs\"","../webpack://image-diff-action/external \"http\"","../webpack://image-diff-action/external \"https\"","../webpack://image-diff-action/external \"os\"","../webpack://image-diff-action/external \"path\"","../webpack://image-diff-action/external \"querystring\"","../webpack://image-diff-action/external \"stream\"","../webpack://image-diff-action/external \"url\"","../webpack://image-diff-action/external \"util\"","../webpack://image-diff-action/external \"zlib\"","../webpack://image-diff-action/webpack/bootstrap","../webpack://image-diff-action/webpack/runtime/compat","../webpack://image-diff-action/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\nfunction escapeData(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = command_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    command_1.issueCommand('add-path', {}, inputPath);\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","const Canvas = require('./lib/canvas')\nconst Image = require('./lib/image')\nconst CanvasRenderingContext2D = require('./lib/context2d')\nconst parseFont = require('./lib/parse-font')\nconst packageJson = require('./package.json')\nconst bindings = require('./lib/bindings')\nconst fs = require('fs')\nconst PNGStream = require('./lib/pngstream')\nconst PDFStream = require('./lib/pdfstream')\nconst JPEGStream = require('./lib/jpegstream')\nconst DOMMatrix = require('./lib/DOMMatrix').DOMMatrix\nconst DOMPoint = require('./lib/DOMMatrix').DOMPoint\n\nfunction createCanvas (width, height, type) {\n  return new Canvas(width, height, type)\n}\n\nfunction createImageData (array, width, height) {\n  return new bindings.ImageData(array, width, height)\n}\n\nfunction loadImage (src) {\n  return new Promise((resolve, reject) => {\n    const image = new Image()\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = () => { cleanup(); resolve(image) }\n    image.onerror = (err) => { cleanup(); reject(err) }\n\n    image.src = src\n  })\n}\n\n/**\n * Resolve paths for registerFont. Must be called *before* creating a Canvas\n * instance.\n * @param src {string} Path to font file.\n * @param fontFace {{family: string, weight?: string, style?: string}} Object\n * specifying font information. `weight` and `style` default to `\"normal\"`.\n */\nfunction registerFont (src, fontFace) {\n  // TODO this doesn't need to be on Canvas; it should just be a static method\n  // of `bindings`.\n  return Canvas._registerFont(fs.realpathSync(src), fontFace)\n}\n\nmodule.exports = {\n  Canvas,\n  Context2d: CanvasRenderingContext2D, // Legacy/compat export\n  CanvasRenderingContext2D,\n  CanvasGradient: bindings.CanvasGradient,\n  CanvasPattern: bindings.CanvasPattern,\n  Image,\n  ImageData: bindings.ImageData,\n  PNGStream,\n  PDFStream,\n  JPEGStream,\n  DOMMatrix,\n  DOMPoint,\n\n  registerFont,\n  parseFont,\n\n  createCanvas,\n  createImageData,\n  loadImage,\n\n  backends: bindings.Backends,\n\n  /** Library version. */\n  version: packageJson.version,\n  /** Cairo version. */\n  cairoVersion: bindings.cairoVersion,\n  /** jpeglib version. */\n  jpegVersion: bindings.jpegVersion,\n  /** gif_lib version. */\n  gifVersion: bindings.gifVersion ? bindings.gifVersion.replace(/[^.\\d]/g, '') : undefined,\n  /** freetype version. */\n  freetypeVersion: bindings.freetypeVersion\n}\n","'use strict'\n\nconst util = require('util')\n\n// DOMMatrix per https://drafts.fxtf.org/geometry/#DOMMatrix\n\nfunction DOMPoint(x, y, z, w) {\n  if (!(this instanceof DOMPoint)) {\n    throw new TypeError(\"Class constructors cannot be invoked without 'new'\")\n  }\n\n  if (typeof x === 'object') {\n    w = x.w\n    z = x.z\n    y = x.y\n    x = x.x\n  }\n  this.x = typeof x === 'number' ? x : 0\n  this.y = typeof y === 'number' ? y : 0\n  this.z = typeof z === 'number' ? z : 0\n  this.w = typeof w === 'number' ? w : 1\n}\n\n// Constants to index into _values (col-major)\nconst M11 = 0, M12 = 1, M13 = 2, M14 = 3\nconst M21 = 4, M22 = 5, M23 = 6, M24 = 7\nconst M31 = 8, M32 = 9, M33 = 10, M34 = 11\nconst M41 = 12, M42 = 13, M43 = 14, M44 = 15\n\nconst DEGREE_PER_RAD = 180 / Math.PI\nconst RAD_PER_DEGREE = Math.PI / 180\n\nfunction parseMatrix(init) {\n  var parsed = init.replace(/matrix\\(/, '')\n  parsed = parsed.split(/,/, 7) // 6 + 1 to handle too many params\n  if (parsed.length !== 6) throw new Error(`Failed to parse ${init}`)\n  parsed = parsed.map(parseFloat)\n  return [\n    parsed[0], parsed[1], 0, 0,\n    parsed[2], parsed[3], 0, 0,\n    0, 0, 1, 0,\n    parsed[4], parsed[5], 0, 1\n  ]\n}\n\nfunction parseMatrix3d(init) {\n  var parsed = init.replace(/matrix3d\\(/, '')\n  parsed = parsed.split(/,/, 17) // 16 + 1 to handle too many params\n  if (parsed.length !== 16) throw new Error(`Failed to parse ${init}`)\n  return parsed.map(parseFloat)\n}\n\nfunction parseTransform(tform) {\n  var type = tform.split(/\\(/, 1)[0]\n  switch (type) {\n    case 'matrix':\n      return parseMatrix(tform)\n    case 'matrix3d':\n      return parseMatrix3d(tform)\n    // TODO This is supposed to support any CSS transform value.\n    default:\n      throw new Error(`${type} parsing not implemented`)\n  }\n}\n\nfunction DOMMatrix (init) {\n  if (!(this instanceof DOMMatrix)) {\n    throw new TypeError(\"Class constructors cannot be invoked without 'new'\")\n  }\n\n  this._is2D = true\n  this._values = new Float64Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ])\n\n  var i\n\n  if (typeof init === 'string') { // parse CSS transformList\n    if (init === '') return // default identity matrix\n    var tforms = init.split(/\\)\\s+/, 20).map(parseTransform)\n    if (tforms.length === 0) return\n    init = tforms[0]\n    for (i = 1; i < tforms.length; i++) init = multiply(tforms[i], init)\n  }\n\n  i = 0\n  if (init && init.length === 6) {\n    setNumber2D(this, M11, init[i++])\n    setNumber2D(this, M12, init[i++])\n    setNumber2D(this, M21, init[i++])\n    setNumber2D(this, M22, init[i++])\n    setNumber2D(this, M41, init[i++])\n    setNumber2D(this, M42, init[i++])\n  } else if (init && init.length === 16) {\n    setNumber2D(this, M11, init[i++])\n    setNumber2D(this, M12, init[i++])\n    setNumber3D(this, M13, init[i++])\n    setNumber3D(this, M14, init[i++])\n    setNumber2D(this, M21, init[i++])\n    setNumber2D(this, M22, init[i++])\n    setNumber3D(this, M23, init[i++])\n    setNumber3D(this, M24, init[i++])\n    setNumber3D(this, M31, init[i++])\n    setNumber3D(this, M32, init[i++])\n    setNumber3D(this, M33, init[i++])\n    setNumber3D(this, M34, init[i++])\n    setNumber2D(this, M41, init[i++])\n    setNumber2D(this, M42, init[i++])\n    setNumber3D(this, M43, init[i++])\n    setNumber3D(this, M44, init[i])\n  } else if (init !== undefined) {\n    throw new TypeError('Expected string or array.')\n  }\n}\n\nDOMMatrix.fromMatrix = function (init) {\n  if (!(init instanceof DOMMatrix)) throw new TypeError('Expected DOMMatrix')\n  return new DOMMatrix(init._values)\n}\nDOMMatrix.fromFloat32Array = function (init) {\n  if (!(init instanceof Float32Array)) throw new TypeError('Expected Float32Array')\n  return new DOMMatrix(init)\n}\nDOMMatrix.fromFloat64Array = function (init) {\n  if (!(init instanceof Float64Array)) throw new TypeError('Expected Float64Array')\n  return new DOMMatrix(init)\n}\n\n// TODO || is for Node.js pre-v6.6.0\nDOMMatrix.prototype[util.inspect.custom || 'inspect'] = function (depth, options) {\n  if (depth < 0) return '[DOMMatrix]'\n\n  return `DOMMatrix [\n    a: ${this.a}\n    b: ${this.b}\n    c: ${this.c}\n    d: ${this.d}\n    e: ${this.e}\n    f: ${this.f}\n    m11: ${this.m11}\n    m12: ${this.m12}\n    m13: ${this.m13}\n    m14: ${this.m14}\n    m21: ${this.m21}\n    m22: ${this.m22}\n    m23: ${this.m23}\n    m23: ${this.m23}\n    m31: ${this.m31}\n    m32: ${this.m32}\n    m33: ${this.m33}\n    m34: ${this.m34}\n    m41: ${this.m41}\n    m42: ${this.m42}\n    m43: ${this.m43}\n    m44: ${this.m44}\n    is2D: ${this.is2D}\n    isIdentity: ${this.isIdentity} ]`\n}\n\nDOMMatrix.prototype.toString = function () {\n  return this.is2D ?\n    `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.e}, ${this.f})` :\n    `matrix3d(${this._values.join(', ')})`\n}\n\n/**\n * Checks that `value` is a number and sets the value.\n */\nfunction setNumber2D(receiver, index, value) {\n  if (typeof value !== 'number') throw new TypeError('Expected number')\n  return receiver._values[index] = value\n}\n\n/**\n * Checks that `value` is a number, sets `_is2D = false` if necessary and sets\n * the value.\n */\nfunction setNumber3D(receiver, index, value) {\n  if (typeof value !== 'number') throw new TypeError('Expected number')\n  if (index === M33 || index === M44) {\n    if (value !== 1) receiver._is2D = false\n  } else if (value !== 0) receiver._is2D = false\n  return receiver._values[index] = value\n}\n\nObject.defineProperties(DOMMatrix.prototype, {\n  m11: {get: function () { return this._values[M11] }, set: function (v) { return setNumber2D(this, M11, v) }},\n  m12: {get: function () { return this._values[M12] }, set: function (v) { return setNumber2D(this, M12, v) }},\n  m13: {get: function () { return this._values[M13] }, set: function (v) { return setNumber3D(this, M13, v) }},\n  m14: {get: function () { return this._values[M14] }, set: function (v) { return setNumber3D(this, M14, v) }},\n  m21: {get: function () { return this._values[M21] }, set: function (v) { return setNumber2D(this, M21, v) }},\n  m22: {get: function () { return this._values[M22] }, set: function (v) { return setNumber2D(this, M22, v) }},\n  m23: {get: function () { return this._values[M23] }, set: function (v) { return setNumber3D(this, M23, v) }},\n  m24: {get: function () { return this._values[M24] }, set: function (v) { return setNumber3D(this, M24, v) }},\n  m31: {get: function () { return this._values[M31] }, set: function (v) { return setNumber3D(this, M31, v) }},\n  m32: {get: function () { return this._values[M32] }, set: function (v) { return setNumber3D(this, M32, v) }},\n  m33: {get: function () { return this._values[M33] }, set: function (v) { return setNumber3D(this, M33, v) }},\n  m34: {get: function () { return this._values[M34] }, set: function (v) { return setNumber3D(this, M34, v) }},\n  m41: {get: function () { return this._values[M41] }, set: function (v) { return setNumber2D(this, M41, v) }},\n  m42: {get: function () { return this._values[M42] }, set: function (v) { return setNumber2D(this, M42, v) }},\n  m43: {get: function () { return this._values[M43] }, set: function (v) { return setNumber3D(this, M43, v) }},\n  m44: {get: function () { return this._values[M44] }, set: function (v) { return setNumber3D(this, M44, v) }},\n\n  a: {get: function () { return this.m11 }, set: function (v) { return this.m11 = v }},\n  b: {get: function () { return this.m12 }, set: function (v) { return this.m12 = v }},\n  c: {get: function () { return this.m21 }, set: function (v) { return this.m21 = v }},\n  d: {get: function () { return this.m22 }, set: function (v) { return this.m22 = v }},\n  e: {get: function () { return this.m41 }, set: function (v) { return this.m41 = v }},\n  f: {get: function () { return this.m42 }, set: function (v) { return this.m42 = v }},\n\n  is2D: {get: function () { return this._is2D }}, // read-only\n\n  isIdentity: {\n    get: function () {\n      var values = this._values\n      return values[M11] === 1 && values[M12] === 0 && values[M13] === 0 && values[M14] === 0 &&\n             values[M21] === 0 && values[M22] === 1 && values[M23] === 0 && values[M24] === 0 &&\n             values[M31] === 0 && values[M32] === 0 && values[M33] === 1 && values[M34] === 0 &&\n             values[M41] === 0 && values[M42] === 0 && values[M43] === 0 && values[M44] === 1\n    }\n  }\n})\n\n/**\n * Instantiates a DOMMatrix, bypassing the constructor.\n * @param {Float64Array} values Value to assign to `_values`. This is assigned\n *   without copying (okay because all usages are followed by a  multiply).\n */\nfunction newInstance(values) {\n  var instance = Object.create(DOMMatrix.prototype)\n  instance.constructor = DOMMatrix\n  instance._is2D = true\n  instance._values = values\n  return instance\n}\n\nfunction multiply(A, B) {\n  var dest = new Float64Array(16)\n  for (var i = 0; i < 4; i++) {\n    for (var j = 0; j < 4; j++) {\n      var sum = 0\n      for (var k = 0; k < 4; k++) {\n        sum += A[i * 4 + k] * B[k * 4 + j]\n      }\n      dest[i * 4 + j] = sum\n    }\n  }\n  return dest\n}\n\nDOMMatrix.prototype.multiply = function (other) {\n  return newInstance(this._values).multiplySelf(other)\n}\nDOMMatrix.prototype.multiplySelf = function (other) {\n  this._values = multiply(other._values, this._values)\n  if (!other.is2D) this._is2D = false\n  return this\n}\nDOMMatrix.prototype.preMultiplySelf = function (other) {\n  this._values = multiply(this._values, other._values)\n  if (!other.is2D) this._is2D = false\n  return this\n}\n\nDOMMatrix.prototype.translate = function (tx, ty, tz) {\n  return newInstance(this._values).translateSelf(tx, ty, tz)\n}\nDOMMatrix.prototype.translateSelf = function (tx, ty, tz) {\n  if (typeof tx !== 'number') tx = 0\n  if (typeof ty !== 'number') ty = 0\n  if (typeof tz !== 'number') tz = 0\n  this._values = multiply([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    tx, ty, tz, 1\n  ], this._values)\n  if (tz !== 0) this._is2D = false\n  return this\n}\n\nDOMMatrix.prototype.scale = function (scaleX, scaleY, scaleZ, originX, originY, originZ) {\n  return newInstance(this._values).scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)\n}\nDOMMatrix.prototype.scale3d = function (scale, originX, originY, originZ) {\n  return newInstance(this._values).scale3dSelf(scale, originX, originY, originZ)\n}\nDOMMatrix.prototype.scale3dSelf = function (scale, originX, originY, originZ) {\n  return this.scaleSelf(scale, scale, scale, originX, originY, originZ)\n}\nDOMMatrix.prototype.scaleSelf = function (scaleX, scaleY, scaleZ, originX, originY, originZ) {\n  // Not redundant with translate's checks because we need to negate the values later.\n  if (typeof originX !== 'number') originX = 0\n  if (typeof originY !== 'number') originY = 0\n  if (typeof originZ !== 'number') originZ = 0\n  this.translateSelf(originX, originY, originZ)\n  if (typeof scaleX !== 'number') scaleX = 1\n  if (typeof scaleY !== 'number') scaleY = scaleX\n  if (typeof scaleZ !== 'number') scaleZ = 1\n  this._values = multiply([\n    scaleX, 0, 0, 0,\n    0, scaleY, 0, 0,\n    0, 0, scaleZ, 0,\n    0, 0, 0, 1\n  ], this._values)\n  this.translateSelf(-originX, -originY, -originZ)\n  if (scaleZ !== 1 || originZ !== 0) this._is2D = false\n  return this\n}\n\nDOMMatrix.prototype.rotateFromVector = function (x, y) {\n  return newInstance(this._values).rotateFromVectorSelf(x, y)\n}\nDOMMatrix.prototype.rotateFromVectorSelf = function (x, y) {\n  if (typeof x !== 'number') x = 0\n  if (typeof y !== 'number') y = 0\n  var theta = (x === 0 && y === 0) ? 0 : Math.atan2(y, x) * DEGREE_PER_RAD\n  return this.rotateSelf(theta)\n}\nDOMMatrix.prototype.rotate = function (rotX, rotY, rotZ) {\n  return newInstance(this._values).rotateSelf(rotX, rotY, rotZ)\n}\nDOMMatrix.prototype.rotateSelf = function (rotX, rotY, rotZ) {\n  if (rotY === undefined && rotZ === undefined) {\n    rotZ = rotX\n    rotX = rotY = 0\n  }\n  if (typeof rotY !== 'number') rotY = 0\n  if (typeof rotZ !== 'number') rotZ = 0\n  if (rotX !== 0 || rotY !== 0) this._is2D = false\n  rotX *= RAD_PER_DEGREE\n  rotY *= RAD_PER_DEGREE\n  rotZ *= RAD_PER_DEGREE\n  var c, s\n  c = Math.cos(rotZ)\n  s = Math.sin(rotZ)\n  this._values = multiply([\n    c, s, 0, 0,\n    -s, c, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ], this._values)\n  c = Math.cos(rotY)\n  s = Math.sin(rotY)\n  this._values = multiply([\n    c, 0, -s, 0,\n    0, 1, 0, 0,\n    s, 0, c, 0,\n    0, 0, 0, 1\n  ], this._values)\n  c = Math.cos(rotX)\n  s = Math.sin(rotX)\n  this._values = multiply([\n    1, 0, 0, 0,\n    0, c, s, 0,\n    0, -s, c, 0,\n    0, 0, 0, 1\n  ], this._values)\n  return this\n}\n\nDOMMatrix.prototype.rotateAxisAngle = function (x, y, z, angle) {\n  return newInstance(this._values).rotateAxisAngleSelf(x, y, z, angle)\n}\nDOMMatrix.prototype.rotateAxisAngleSelf = function (x, y, z, angle) {\n  if (typeof x !== 'number') x = 0\n  if (typeof y !== 'number') y = 0\n  if (typeof z !== 'number') z = 0\n  // Normalize axis\n  var length = Math.sqrt(x * x + y * y + z * z)\n  if (length === 0) return this\n  if (length !== 1) {\n    x /= length\n    y /= length\n    z /= length\n  }\n  angle *= RAD_PER_DEGREE\n  var c = Math.cos(angle)\n  var s = Math.sin(angle)\n  var t = 1 - c\n  var tx = t * x\n  var ty = t * y\n  // NB: This is the generic transform. If the axis is a major axis, there are\n  // faster transforms.\n  this._values = multiply([\n    tx * x + c,      tx * y + s * z,  tx * z - s * y,  0,\n    tx * y - s * z,  ty * y + c,      ty * z + s * x,  0,\n    tx * z + s * y,  ty * z - s * x,  t * z * z + c,   0,\n    0,               0,               0,               1\n  ], this._values)\n  if (x !== 0 || y !== 0) this._is2D = false\n  return this\n}\n\nDOMMatrix.prototype.skewX = function (sx) {\n  return newInstance(this._values).skewXSelf(sx)\n}\nDOMMatrix.prototype.skewXSelf = function (sx) {\n  if (typeof sx !== 'number') return this\n  var t = Math.tan(sx * RAD_PER_DEGREE)\n  this._values = multiply([\n    1, 0, 0, 0,\n    t, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ], this._values)\n  return this\n}\n\nDOMMatrix.prototype.skewY = function (sy) {\n  return newInstance(this._values).skewYSelf(sy)\n}\nDOMMatrix.prototype.skewYSelf = function (sy) {\n  if (typeof sy !== 'number') return this\n  var t = Math.tan(sy * RAD_PER_DEGREE)\n  this._values = multiply([\n    1, t, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ], this._values)\n  return this\n}\n\nDOMMatrix.prototype.flipX = function () { \n  return newInstance(multiply([\n    -1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ], this._values))\n}\nDOMMatrix.prototype.flipY = function () {\n  return newInstance(multiply([\n    1, 0, 0, 0,\n    0, -1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ], this._values))\n}\n\nDOMMatrix.prototype.inverse = function () {\n  return newInstance(this._values).invertSelf()\n}\nDOMMatrix.prototype.invertSelf = function () {\n  // If not invertible, set all attributes to NaN and is2D to false\n  throw new Error('Not implemented')\n}\n\nDOMMatrix.prototype.setMatrixValue = function (transformList) {\n  var temp = new DOMMatrix(transformList)\n  this._values = temp._values\n  this._is2D = temp._is2D\n  return this\n}\n\nDOMMatrix.prototype.transformPoint = function (point) {\n  point = new DOMPoint(point)\n  var x = point.x\n  var y = point.y\n  var z = point.z\n  var w = point.w\n  var values = this._values\n  var nx = values[M11] * x + values[M21] * y + values[M31] * z + values[M41] * w\n  var ny = values[M12] * x + values[M22] * y + values[M32] * z + values[M42] * w\n  var nz = values[M13] * x + values[M23] * y + values[M33] * z + values[M43] * w\n  var nw = values[M14] * x + values[M24] * y + values[M34] * z + values[M44] * w\n  return new DOMPoint(nx, ny, nz, nw)\n}\n\nDOMMatrix.prototype.toFloat32Array = function () { \n  return Float32Array.from(this._values)\n}\n\nDOMMatrix.prototype.toFloat64Array = function () { \n  return this._values.slice(0)\n}\n\nmodule.exports = {DOMMatrix, DOMPoint}\n","'use strict';\n\nmodule.exports = require('../build/Release/canvas.node');\n","'use strict';\n\n/*!\n * Canvas\n * Copyright (c) 2010 LearnBoost <tj@learnboost.com>\n * MIT Licensed\n */\n\nconst bindings = require('./bindings')\nconst Canvas = module.exports = bindings.Canvas\nconst Context2d = require('./context2d')\nconst PNGStream = require('./pngstream')\nconst PDFStream = require('./pdfstream')\nconst JPEGStream = require('./jpegstream')\nconst FORMATS = ['image/png', 'image/jpeg']\nconst util = require('util')\n\n// TODO || is for Node.js pre-v6.6.0\nCanvas.prototype[util.inspect.custom || 'inspect'] = function () {\n  return `[Canvas ${this.width}x${this.height}]`\n}\n\nCanvas.prototype.getContext = function (contextType, contextAttributes) {\n  if ('2d' == contextType) {\n    var ctx = this._context2d || (this._context2d = new Context2d(this, contextAttributes));\n    this.context = ctx;\n    ctx.canvas = this;\n    return ctx;\n  }\n};\n\nCanvas.prototype.pngStream =\nCanvas.prototype.createPNGStream = function(options){\n  return new PNGStream(this, options);\n};\n\nCanvas.prototype.pdfStream =\nCanvas.prototype.createPDFStream = function(options){\n  return new PDFStream(this, options);\n};\n\nCanvas.prototype.jpegStream =\nCanvas.prototype.createJPEGStream = function(options){\n  return new JPEGStream(this, options);\n};\n\nCanvas.prototype.toDataURL = function(a1, a2, a3){\n  // valid arg patterns (args -> [type, opts, fn]):\n  // [] -> ['image/png', null, null]\n  // [qual] -> ['image/png', null, null]\n  // [undefined] -> ['image/png', null, null]\n  // ['image/png'] -> ['image/png', null, null]\n  // ['image/png', qual] -> ['image/png', null, null]\n  // [fn] -> ['image/png', null, fn]\n  // [type, fn] -> [type, null, fn]\n  // [undefined, fn] -> ['image/png', null, fn]\n  // ['image/png', qual, fn] -> ['image/png', null, fn]\n  // ['image/jpeg', fn] -> ['image/jpeg', null, fn]\n  // ['image/jpeg', opts, fn] -> ['image/jpeg', opts, fn]\n  // ['image/jpeg', qual, fn] -> ['image/jpeg', {quality: qual}, fn]\n  // ['image/jpeg', undefined, fn] -> ['image/jpeg', null, fn]\n  // ['image/jpeg'] -> ['image/jpeg', null, fn]\n  // ['image/jpeg', opts] -> ['image/jpeg', opts, fn]\n  // ['image/jpeg', qual] -> ['image/jpeg', {quality: qual}, fn]\n\n  var type = 'image/png';\n  var opts = {};\n  var fn;\n\n  if ('function' === typeof a1) {\n    fn = a1;\n  } else {\n    if ('string' === typeof a1 && FORMATS.includes(a1.toLowerCase())) {\n      type = a1.toLowerCase();\n    }\n\n    if ('function' === typeof a2) {\n      fn = a2;\n    } else {\n      if ('object' === typeof a2) {\n        opts = a2;\n      } else if ('number' === typeof a2) {\n        opts = {quality: Math.max(0, Math.min(1, a2))};\n      }\n\n      if ('function' === typeof a3) {\n        fn = a3;\n      } else if (undefined !== a3) {\n        throw new TypeError(typeof a3 + ' is not a function');\n      }\n    }\n  }\n\n  if (this.width === 0 || this.height === 0) {\n    // Per spec, if the bitmap has no pixels, return this string:\n    var str = \"data:,\";\n    if (fn) {\n      setTimeout(() => fn(null, str));\n      return;\n    } else {\n      return str;\n    }\n  }\n\n  if (fn) {\n    this.toBuffer((err, buf) => {\n      if (err) return fn(err);\n      fn(null, `data:${type};base64,${buf.toString('base64')}`);\n    }, type, opts)\n  } else {\n    return `data:${type};base64,${this.toBuffer(type, opts).toString('base64')}`\n  }\n};\n","'use strict'\n\n/*!\n * Canvas - Context2d\n * Copyright (c) 2010 LearnBoost <tj@learnboost.com>\n * MIT Licensed\n */\n\nconst bindings = require('./bindings')\nconst parseFont = require('./parse-font')\nconst { DOMMatrix } = require('./DOMMatrix')\n\nbindings.CanvasRenderingContext2dInit(DOMMatrix, parseFont)\nmodule.exports = bindings.CanvasRenderingContext2d\n","'use strict';\n\n/*!\n * Canvas - Image\n * Copyright (c) 2010 LearnBoost <tj@learnboost.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nconst bindings = require('./bindings')\nconst Image = module.exports = bindings.Image\nconst util = require('util')\n\n// Lazily loaded simple-get\nlet get;\n\nconst {GetSource, SetSource} = bindings;\n\nObject.defineProperty(Image.prototype, 'src', {\n  /**\n   * src setter. Valid values:\n   *  * `data:` URI\n   *  * Local file path\n   *  * HTTP or HTTPS URL\n   *  * Buffer containing image data (i.e. not a `data:` URI stored in a Buffer)\n   *\n   * @param {String|Buffer} val filename, buffer, data URI, URL\n   * @api public\n   */\n  set(val) {\n    if (typeof val === 'string') {\n      if (/^\\s*data:/.test(val)) { // data: URI\n        const commaI = val.indexOf(',')\n        // 'base64' must come before the comma\n        const isBase64 = val.lastIndexOf('base64', commaI) !== -1\n        const content = val.slice(commaI + 1)\n        setSource(this, Buffer.from(content, isBase64 ? 'base64' : 'utf8'), val);\n      } else if (/^\\s*https?:\\/\\//.test(val)) { // remote URL\n        const onerror = err => {\n          if (typeof this.onerror === 'function') {\n            this.onerror(err)\n          } else {\n            throw err\n          }\n        }\n\n        if (!get) get = require('simple-get');\n\n        get.concat(val, (err, res, data) => {\n          if (err) return onerror(err)\n\n          if (res.statusCode < 200 || res.statusCode >= 300) {\n            return onerror(new Error(`Server responded with ${res.statusCode}`))\n          }\n\n          setSource(this, data)\n        })\n      } else { // local file path assumed\n        setSource(this, val);\n      }\n    } else if (Buffer.isBuffer(val)) {\n      setSource(this, val);\n    }\n  },\n\n  get() {\n    // TODO https://github.com/Automattic/node-canvas/issues/118\n    return getSource(this);\n  },\n\n  configurable: true\n});\n\n// TODO || is for Node.js pre-v6.6.0\nImage.prototype[util.inspect.custom || 'inspect'] = function(){\n  return '[Image'\n    + (this.complete ? ':' + this.width + 'x' + this.height : '')\n    + (this.src ? ' ' + this.src : '')\n    + (this.complete ? ' complete' : '')\n    + ']';\n};\n\nfunction getSource(img){\n  return img._originalSource || GetSource.call(img);\n}\n\nfunction setSource(img, src, origSrc){\n  SetSource.call(img, src);\n  img._originalSource = origSrc;\n}\n","'use strict';\n\n/*!\n * Canvas - JPEGStream\n * Copyright (c) 2010 LearnBoost <tj@learnboost.com>\n * MIT Licensed\n */\n\nvar Readable = require('stream').Readable;\nvar util = require('util');\n\nvar JPEGStream = module.exports = function JPEGStream(canvas, options) {\n  if (!(this instanceof JPEGStream)) {\n    throw new TypeError(\"Class constructors cannot be invoked without 'new'\");\n  }\n\n  if (canvas.streamJPEGSync === undefined) {\n    throw new Error(\"node-canvas was built without JPEG support.\");\n  }\n\n  Readable.call(this);\n\n  this.options = options;\n  this.canvas = canvas;\n};\n\nutil.inherits(JPEGStream, Readable);\n\nfunction noop() {}\n\nJPEGStream.prototype._read = function _read() {\n  // For now we're not controlling the c++ code's data emission, so we only\n  // call canvas.streamJPEGSync once and let it emit data at will.\n  this._read = noop;\n  var self = this;\n  self.canvas.streamJPEGSync(this.options, function(err, chunk){\n    if (err) {\n      self.emit('error', err);\n    } else if (chunk) {\n      self.push(chunk);\n    } else {\n      self.push(null);\n    }\n  });\n};\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\n  , styles = 'italic|oblique'\n  , variants = 'small-caps'\n  , stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\n  , units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\n  , string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp('(' + weights + ') +', 'i')\nconst styleRe = new RegExp('(' + styles + ') +', 'i')\nconst variantRe = new RegExp('(' + variants + ') +', 'i')\nconst stretchRe = new RegExp('(' + stretches + ') +', 'i')\nconst sizeFamilyRe = new RegExp(\n  '([\\\\d\\\\.]+)(' + units + ') *'\n  + '((?:' + string + ')( *, *(?:' + string + '))*)')\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  let substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","'use strict';\n\n/*!\n * Canvas - PDFStream\n */\n\nvar Readable = require('stream').Readable;\nvar util = require('util');\n\nvar PDFStream = module.exports = function PDFStream(canvas, options) {\n  if (!(this instanceof PDFStream)) {\n    throw new TypeError(\"Class constructors cannot be invoked without 'new'\");\n  }\n\n  Readable.call(this);\n\n  this.canvas = canvas;\n  this.options = options;\n};\n\nutil.inherits(PDFStream, Readable);\n\nfunction noop() {}\n\nPDFStream.prototype._read = function _read() {\n  // For now we're not controlling the c++ code's data emission, so we only\n  // call canvas.streamPDFSync once and let it emit data at will.\n  this._read = noop;\n  var self = this;\n  self.canvas.streamPDFSync(function(err, chunk, len){\n    if (err) {\n      self.emit('error', err);\n    } else if (len) {\n      self.push(chunk);\n    } else {\n      self.push(null);\n    }\n  }, this.options);\n};\n","'use strict';\n\n/*!\n * Canvas - PNGStream\n * Copyright (c) 2010 LearnBoost <tj@learnboost.com>\n * MIT Licensed\n */\n\nvar Readable = require('stream').Readable;\nvar util = require('util');\n\nvar PNGStream = module.exports = function PNGStream(canvas, options) {\n  if (!(this instanceof PNGStream)) {\n    throw new TypeError(\"Class constructors cannot be invoked without 'new'\");\n  }\n\n  Readable.call(this);\n\n  if (options &&\n    options.palette instanceof Uint8ClampedArray &&\n    options.palette.length % 4 !== 0) {\n    throw new Error(\"Palette length must be a multiple of 4.\");\n  }\n  this.canvas = canvas;\n  this.options = options || {};\n};\n\nutil.inherits(PNGStream, Readable);\n\nfunction noop() {}\n\nPNGStream.prototype._read = function _read() {\n  // For now we're not controlling the c++ code's data emission, so we only\n  // call canvas.streamPNGSync once and let it emit data at will.\n  this._read = noop;\n  var self = this;\n  self.canvas.streamPNGSync(function(err, chunk, len){\n    if (err) {\n      self.emit('error', err);\n    } else if (len) {\n      self.push(chunk);\n    } else {\n      self.push(null);\n    }\n  }, self.options);\n};\n","'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\nconst zlib = require('zlib');\nconst mimicResponse = require('mimic-response');\n\nconst decompressResponse = response => {\n\tconst contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();\n\n\tif (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {\n\t\treturn response;\n\t}\n\n\tconst isBrotli = contentEncoding === 'br';\n\tif (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {\n\t\treturn response;\n\t}\n\n\tconst decompress = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n\tconst stream = new PassThroughStream();\n\n\tmimicResponse(response, stream);\n\n\tdecompress.on('error', error => {\n\t\t// Ignore empty response\n\t\tif (error.code === 'Z_BUF_ERROR') {\n\t\t\tstream.end();\n\t\t\treturn;\n\t\t}\n\n\t\tstream.emit('error', error);\n\t});\n\n\tresponse.pipe(decompress).pipe(stream);\n\n\treturn stream;\n};\n\nmodule.exports = decompressResponse;\n// TODO: remove this in the next major version\nmodule.exports.default = decompressResponse;\n","'use strict';\n\n// We define these manually to ensure they're always copied\n// even if they would move up the prototype chain\n// https://nodejs.org/api/http.html#http_class_http_incomingmessage\nconst knownProperties = [\n\t'aborted',\n\t'complete',\n\t'destroy',\n\t'headers',\n\t'httpVersion',\n\t'httpVersionMinor',\n\t'httpVersionMajor',\n\t'method',\n\t'rawHeaders',\n\t'rawTrailers',\n\t'setTimeout',\n\t'socket',\n\t'statusCode',\n\t'statusMessage',\n\t'trailers',\n\t'url'\n];\n\nmodule.exports = (fromStream, toStream) => {\n\tconst fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));\n\n\tfor (const property of fromProperties) {\n\t\t// Don't overwrite existing properties.\n\t\tif (property in toStream) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ttoStream[property] = typeof fromStream[property] === 'function' ? fromStream[property].bind(fromStream) : fromStream[property];\n\t}\n\n\treturn toStream;\n};\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","const resemble = require(\"./resemble\");\n\nmodule.exports = function compareImages(image1, image2, options) {\n    return new Promise((resolve, reject) => {\n        resemble.compare(image1, image2, options, (err, data) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n","/*\r\nJames Cryer / Huddle\r\nURL: https://github.com/Huddle/Resemble.js\r\n*/\r\n\r\nvar naiveFallback = function () {\r\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\r\n    if (typeof self === \"object\" && self) {\r\n        return self;\r\n    }\r\n    if (typeof window === \"object\" && window) {\r\n        return window;\r\n    }\r\n    throw new Error(\"Unable to resolve global `this`\");\r\n};\r\n\r\nvar getGlobalThis = function () {\r\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\r\n    // Fallback to standard globalThis if available\r\n    if (typeof globalThis === \"object\" && globalThis) {\r\n        return globalThis;\r\n    }\r\n\r\n    try {\r\n        Object.defineProperty(Object.prototype, \"__global__\", {\r\n            get: function () {\r\n                return this;\r\n            },\r\n            configurable: true\r\n        });\r\n    } catch (error) {\r\n        return naiveFallback();\r\n    }\r\n    try {\r\n        // eslint-disable-next-line no-undef\r\n        if (!__global__) {\r\n            return naiveFallback();\r\n        }\r\n        return __global__; // eslint-disable-line no-undef\r\n    } finally {\r\n        delete Object.prototype.__global__;\r\n    }\r\n};\r\n\r\nvar isNode = function () {\r\n    const globalPolyfill = getGlobalThis();\r\n    return typeof globalPolyfill.process !== \"undefined\" && globalPolyfill.process.versions && globalPolyfill.process.versions.node;\r\n};\r\n\r\n(function (root, factory) {\r\n    \"use strict\";\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define([], factory);\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory();\r\n    } else {\r\n        root.resemble = factory();\r\n    }\r\n})(this /* eslint-disable-line no-invalid-this*/, function () {\r\n    \"use strict\";\r\n\r\n    var Img;\r\n    var Canvas;\r\n    var loadNodeCanvasImage;\r\n\r\n    if (isNode()) {\r\n        Canvas = require(\"canvas\"); // eslint-disable-line global-require\r\n        Img = Canvas.Image;\r\n        loadNodeCanvasImage = Canvas.loadImage;\r\n    } else {\r\n        Img = Image;\r\n    }\r\n\r\n    function createCanvas(width, height) {\r\n        if (isNode()) {\r\n            return Canvas.createCanvas(width, height);\r\n        }\r\n\r\n        var cnvs = document.createElement(\"canvas\");\r\n        cnvs.width = width;\r\n        cnvs.height = height;\r\n        return cnvs;\r\n    }\r\n\r\n    var oldGlobalSettings = {};\r\n    var globalOutputSettings = oldGlobalSettings;\r\n\r\n    var resemble = function (fileData) {\r\n        var pixelTransparency = 1;\r\n\r\n        var errorPixelColor = {\r\n            // Color for Error Pixels. Between 0 and 255.\r\n            red: 255,\r\n            green: 0,\r\n            blue: 255,\r\n            alpha: 255\r\n        };\r\n\r\n        var targetPix = { r: 0, g: 0, b: 0, a: 0 }; // isAntialiased\r\n\r\n        var errorPixelTransform = {\r\n            flat: function (px, offset) {\r\n                px[offset] = errorPixelColor.red;\r\n                px[offset + 1] = errorPixelColor.green;\r\n                px[offset + 2] = errorPixelColor.blue;\r\n                px[offset + 3] = errorPixelColor.alpha;\r\n            },\r\n            movement: function (px, offset, d1, d2) {\r\n                px[offset] = (d2.r * (errorPixelColor.red / 255) + errorPixelColor.red) / 2;\r\n                px[offset + 1] = (d2.g * (errorPixelColor.green / 255) + errorPixelColor.green) / 2;\r\n                px[offset + 2] = (d2.b * (errorPixelColor.blue / 255) + errorPixelColor.blue) / 2;\r\n                px[offset + 3] = d2.a;\r\n            },\r\n            flatDifferenceIntensity: function (px, offset, d1, d2) {\r\n                px[offset] = errorPixelColor.red;\r\n                px[offset + 1] = errorPixelColor.green;\r\n                px[offset + 2] = errorPixelColor.blue;\r\n                px[offset + 3] = colorsDistance(d1, d2);\r\n            },\r\n            movementDifferenceIntensity: function (px, offset, d1, d2) {\r\n                var ratio = (colorsDistance(d1, d2) / 255) * 0.8;\r\n\r\n                px[offset] = (1 - ratio) * (d2.r * (errorPixelColor.red / 255)) + ratio * errorPixelColor.red;\r\n                px[offset + 1] = (1 - ratio) * (d2.g * (errorPixelColor.green / 255)) + ratio * errorPixelColor.green;\r\n                px[offset + 2] = (1 - ratio) * (d2.b * (errorPixelColor.blue / 255)) + ratio * errorPixelColor.blue;\r\n                px[offset + 3] = d2.a;\r\n            },\r\n            diffOnly: function (px, offset, d1, d2) {\r\n                px[offset] = d2.r;\r\n                px[offset + 1] = d2.g;\r\n                px[offset + 2] = d2.b;\r\n                px[offset + 3] = d2.a;\r\n            }\r\n        };\r\n\r\n        var errorPixel = errorPixelTransform.flat;\r\n        var errorType;\r\n        var boundingBoxes;\r\n        var ignoredBoxes;\r\n        var ignoreAreasColoredWith;\r\n        var largeImageThreshold = 1200;\r\n        var useCrossOrigin = true;\r\n        var data = {};\r\n        var images = [];\r\n        var updateCallbackArray = [];\r\n\r\n        var tolerance = {\r\n            // between 0 and 255\r\n            red: 16,\r\n            green: 16,\r\n            blue: 16,\r\n            alpha: 16,\r\n            minBrightness: 16,\r\n            maxBrightness: 240\r\n        };\r\n\r\n        var ignoreAntialiasing = false;\r\n        var ignoreColors = false;\r\n        var scaleToSameSize = false;\r\n        var compareOnly = false;\r\n        var returnEarlyThreshold;\r\n\r\n        function colorsDistance(c1, c2) {\r\n            return (Math.abs(c1.r - c2.r) + Math.abs(c1.g - c2.g) + Math.abs(c1.b - c2.b)) / 3;\r\n        }\r\n\r\n        function withinBoundingBox(x, y, width, height, box) {\r\n            return x > (box.left || 0) && x < (box.right || width) && y > (box.top || 0) && y < (box.bottom || height);\r\n        }\r\n\r\n        function withinComparedArea(x, y, width, height, pixel2) {\r\n            var isIncluded = true;\r\n            var i;\r\n            var boundingBox;\r\n            var ignoredBox;\r\n            var selected;\r\n            var ignored;\r\n\r\n            if (boundingBoxes instanceof Array) {\r\n                selected = false;\r\n                for (i = 0; i < boundingBoxes.length; i++) {\r\n                    boundingBox = boundingBoxes[i];\r\n                    if (withinBoundingBox(x, y, width, height, boundingBox)) {\r\n                        selected = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (ignoredBoxes instanceof Array) {\r\n                ignored = true;\r\n                for (i = 0; i < ignoredBoxes.length; i++) {\r\n                    ignoredBox = ignoredBoxes[i];\r\n                    if (withinBoundingBox(x, y, width, height, ignoredBox)) {\r\n                        ignored = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (ignoreAreasColoredWith) {\r\n                return colorsDistance(pixel2, ignoreAreasColoredWith) !== 0;\r\n            }\r\n\r\n            if (selected === undefined && ignored === undefined) {\r\n                return true;\r\n            }\r\n            if (selected === false && ignored === true) {\r\n                return false;\r\n            }\r\n            if (selected === true || ignored === true) {\r\n                isIncluded = true;\r\n            }\r\n            if (selected === false || ignored === false) {\r\n                isIncluded = false;\r\n            }\r\n            return isIncluded;\r\n        }\r\n\r\n        function triggerDataUpdate() {\r\n            var len = updateCallbackArray.length;\r\n            var i;\r\n            for (i = 0; i < len; i++) {\r\n                if (typeof updateCallbackArray[i] === \"function\") {\r\n                    updateCallbackArray[i](data);\r\n                }\r\n            }\r\n        }\r\n\r\n        function loop(w, h, callback) {\r\n            var x;\r\n            var y;\r\n\r\n            for (x = 0; x < w; x++) {\r\n                for (y = 0; y < h; y++) {\r\n                    callback(x, y);\r\n                }\r\n            }\r\n        }\r\n\r\n        function parseImage(sourceImageData, width, height) {\r\n            var pixelCount = 0;\r\n            var redTotal = 0;\r\n            var greenTotal = 0;\r\n            var blueTotal = 0;\r\n            var alphaTotal = 0;\r\n            var brightnessTotal = 0;\r\n            var whiteTotal = 0;\r\n            var blackTotal = 0;\r\n\r\n            loop(width, height, function (horizontalPos, verticalPos) {\r\n                var offset = (verticalPos * width + horizontalPos) * 4;\r\n                var red = sourceImageData[offset];\r\n                var green = sourceImageData[offset + 1];\r\n                var blue = sourceImageData[offset + 2];\r\n                var alpha = sourceImageData[offset + 3];\r\n                var brightness = getBrightness(red, green, blue);\r\n\r\n                if (red === green && red === blue && alpha) {\r\n                    if (red === 0) {\r\n                        blackTotal++;\r\n                    } else if (red === 255) {\r\n                        whiteTotal++;\r\n                    }\r\n                }\r\n\r\n                pixelCount++;\r\n\r\n                redTotal += (red / 255) * 100;\r\n                greenTotal += (green / 255) * 100;\r\n                blueTotal += (blue / 255) * 100;\r\n                alphaTotal += ((255 - alpha) / 255) * 100;\r\n                brightnessTotal += (brightness / 255) * 100;\r\n            });\r\n\r\n            data.red = Math.floor(redTotal / pixelCount);\r\n            data.green = Math.floor(greenTotal / pixelCount);\r\n            data.blue = Math.floor(blueTotal / pixelCount);\r\n            data.alpha = Math.floor(alphaTotal / pixelCount);\r\n            data.brightness = Math.floor(brightnessTotal / pixelCount);\r\n            data.white = Math.floor((whiteTotal / pixelCount) * 100);\r\n            data.black = Math.floor((blackTotal / pixelCount) * 100);\r\n\r\n            triggerDataUpdate();\r\n        }\r\n\r\n        function onLoadImage(hiddenImage, callback) {\r\n            // don't assign to hiddenImage, see https://github.com/Huddle/Resemble.js/pull/87/commits/300d43352a2845aad289b254bfbdc7cd6a37e2d7\r\n            var width = hiddenImage.width;\r\n            var height = hiddenImage.height;\r\n\r\n            if (scaleToSameSize && images.length === 1) {\r\n                width = images[0].width;\r\n                height = images[0].height;\r\n            }\r\n\r\n            var hiddenCanvas = createCanvas(width, height);\r\n            var imageData;\r\n\r\n            hiddenCanvas.getContext(\"2d\").drawImage(hiddenImage, 0, 0, width, height);\r\n            imageData = hiddenCanvas.getContext(\"2d\").getImageData(0, 0, width, height);\r\n\r\n            images.push(imageData);\r\n\r\n            callback(imageData, width, height);\r\n        }\r\n\r\n        function loadImageData(fileDataForImage, callback) {\r\n            var fileReader;\r\n            var hiddenImage = new Img();\r\n\r\n            if (!hiddenImage.setAttribute) {\r\n                hiddenImage.setAttribute = function setAttribute() {};\r\n            }\r\n\r\n            if (useCrossOrigin) {\r\n                hiddenImage.setAttribute(\"crossorigin\", \"anonymous\");\r\n            }\r\n\r\n            hiddenImage.onerror = function (err) {\r\n                hiddenImage.onload = null;\r\n                hiddenImage.onerror = null; // fixes pollution between calls\r\n                images.push({ error: err ? err + \"\" : \"Image load error.\" });\r\n                callback();\r\n            };\r\n\r\n            hiddenImage.onload = function () {\r\n                hiddenImage.onload = null; // fixes pollution between calls\r\n                hiddenImage.onerror = null;\r\n                onLoadImage(hiddenImage, callback);\r\n            };\r\n\r\n            if (typeof fileDataForImage === \"string\") {\r\n                hiddenImage.src = fileDataForImage;\r\n                if (!isNode() && hiddenImage.complete && hiddenImage.naturalWidth > 0) {\r\n                    hiddenImage.onload();\r\n                }\r\n            } else if (\r\n                typeof fileDataForImage.data !== \"undefined\" &&\r\n                typeof fileDataForImage.width === \"number\" &&\r\n                typeof fileDataForImage.height === \"number\"\r\n            ) {\r\n                images.push(fileDataForImage);\r\n\r\n                callback(fileDataForImage, fileDataForImage.width, fileDataForImage.height);\r\n            } else if (typeof Buffer !== \"undefined\" && fileDataForImage instanceof Buffer) {\r\n                // If we have Buffer, assume we're on Node+Canvas and its supported\r\n                // hiddenImage.src = fileDataForImage;\r\n\r\n                loadNodeCanvasImage(fileDataForImage)\r\n                    .then(function (image) {\r\n                        hiddenImage.onload = null; // fixes pollution between calls\r\n                        hiddenImage.onerror = null;\r\n                        onLoadImage(image, callback);\r\n                    })\r\n                    .catch(function (err) {\r\n                        images.push({\r\n                            error: err ? err + \"\" : \"Image load error.\"\r\n                        });\r\n                        callback();\r\n                    });\r\n            } else {\r\n                fileReader = new FileReader();\r\n                fileReader.onload = function (event) {\r\n                    hiddenImage.src = event.target.result;\r\n                };\r\n                fileReader.readAsDataURL(fileDataForImage);\r\n            }\r\n        }\r\n\r\n        function isColorSimilar(a, b, color) {\r\n            var absDiff = Math.abs(a - b);\r\n\r\n            if (typeof a === \"undefined\") {\r\n                return false;\r\n            }\r\n            if (typeof b === \"undefined\") {\r\n                return false;\r\n            }\r\n\r\n            if (a === b) {\r\n                return true;\r\n            } else if (absDiff < tolerance[color]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function isPixelBrightnessSimilar(d1, d2) {\r\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\r\n            var brightness = isColorSimilar(d1.brightness, d2.brightness, \"minBrightness\");\r\n            return brightness && alpha;\r\n        }\r\n\r\n        function getBrightness(r, g, b) {\r\n            return 0.3 * r + 0.59 * g + 0.11 * b;\r\n        }\r\n\r\n        function isRGBSame(d1, d2) {\r\n            var red = d1.r === d2.r;\r\n            var green = d1.g === d2.g;\r\n            var blue = d1.b === d2.b;\r\n            return red && green && blue;\r\n        }\r\n\r\n        function isRGBSimilar(d1, d2) {\r\n            var red = isColorSimilar(d1.r, d2.r, \"red\");\r\n            var green = isColorSimilar(d1.g, d2.g, \"green\");\r\n            var blue = isColorSimilar(d1.b, d2.b, \"blue\");\r\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\r\n\r\n            return red && green && blue && alpha;\r\n        }\r\n\r\n        function isContrasting(d1, d2) {\r\n            return Math.abs(d1.brightness - d2.brightness) > tolerance.maxBrightness;\r\n        }\r\n\r\n        function getHue(red, green, blue) {\r\n            var r = red / 255;\r\n            var g = green / 255;\r\n            var b = blue / 255;\r\n            var max = Math.max(r, g, b);\r\n            var min = Math.min(r, g, b);\r\n            var h;\r\n            var d;\r\n\r\n            if (max === min) {\r\n                h = 0; // achromatic\r\n            } else {\r\n                d = max - min;\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                    default:\r\n                        h /= 6;\r\n                }\r\n            }\r\n\r\n            return h;\r\n        }\r\n\r\n        function isAntialiased(sourcePix, pix, cacheSet, verticalPos, horizontalPos, width) {\r\n            var offset;\r\n            var distance = 1;\r\n            var i;\r\n            var j;\r\n            var hasHighContrastSibling = 0;\r\n            var hasSiblingWithDifferentHue = 0;\r\n            var hasEquivalentSibling = 0;\r\n\r\n            addHueInfo(sourcePix);\r\n\r\n            for (i = distance * -1; i <= distance; i++) {\r\n                for (j = distance * -1; j <= distance; j++) {\r\n                    if (i === 0 && j === 0) {\r\n                        // ignore source pixel\r\n                    } else {\r\n                        offset = ((verticalPos + j) * width + (horizontalPos + i)) * 4;\r\n\r\n                        if (!getPixelInfo(targetPix, pix, offset, cacheSet)) {\r\n                            continue;\r\n                        }\r\n\r\n                        addBrightnessInfo(targetPix);\r\n                        addHueInfo(targetPix);\r\n\r\n                        if (isContrasting(sourcePix, targetPix)) {\r\n                            hasHighContrastSibling++;\r\n                        }\r\n\r\n                        if (isRGBSame(sourcePix, targetPix)) {\r\n                            hasEquivalentSibling++;\r\n                        }\r\n\r\n                        if (Math.abs(targetPix.h - sourcePix.h) > 0.3) {\r\n                            hasSiblingWithDifferentHue++;\r\n                        }\r\n\r\n                        if (hasSiblingWithDifferentHue > 1 || hasHighContrastSibling > 1) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (hasEquivalentSibling < 2) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function copyPixel(px, offset, pix) {\r\n            if (errorType === \"diffOnly\") {\r\n                return;\r\n            }\r\n\r\n            px[offset] = pix.r; // r\r\n            px[offset + 1] = pix.g; // g\r\n            px[offset + 2] = pix.b; // b\r\n            px[offset + 3] = pix.a * pixelTransparency; // a\r\n        }\r\n\r\n        function copyGrayScalePixel(px, offset, pix) {\r\n            if (errorType === \"diffOnly\") {\r\n                return;\r\n            }\r\n\r\n            px[offset] = pix.brightness; // r\r\n            px[offset + 1] = pix.brightness; // g\r\n            px[offset + 2] = pix.brightness; // b\r\n            px[offset + 3] = pix.a * pixelTransparency; // a\r\n        }\r\n\r\n        function getPixelInfo(dst, pix, offset) {\r\n            if (pix.length > offset) {\r\n                dst.r = pix[offset];\r\n                dst.g = pix[offset + 1];\r\n                dst.b = pix[offset + 2];\r\n                dst.a = pix[offset + 3];\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        function addBrightnessInfo(pix) {\r\n            pix.brightness = getBrightness(pix.r, pix.g, pix.b); // 'corrected' lightness\r\n        }\r\n\r\n        function addHueInfo(pix) {\r\n            pix.h = getHue(pix.r, pix.g, pix.b);\r\n        }\r\n\r\n        function analyseImages(img1, img2, width, height) {\r\n            var data1 = img1.data;\r\n            var data2 = img2.data;\r\n            var hiddenCanvas;\r\n            var context;\r\n            var imgd;\r\n            var pix;\r\n\r\n            if (!compareOnly) {\r\n                hiddenCanvas = createCanvas(width, height);\r\n\r\n                context = hiddenCanvas.getContext(\"2d\");\r\n                imgd = context.createImageData(width, height);\r\n                pix = imgd.data;\r\n            }\r\n\r\n            var mismatchCount = 0;\r\n            var diffBounds = {\r\n                top: height,\r\n                left: width,\r\n                bottom: 0,\r\n                right: 0\r\n            };\r\n            var updateBounds = function (x, y) {\r\n                diffBounds.left = Math.min(x, diffBounds.left);\r\n                diffBounds.right = Math.max(x, diffBounds.right);\r\n                diffBounds.top = Math.min(y, diffBounds.top);\r\n                diffBounds.bottom = Math.max(y, diffBounds.bottom);\r\n            };\r\n\r\n            var time = Date.now();\r\n\r\n            var skip;\r\n\r\n            if (!!largeImageThreshold && ignoreAntialiasing && (width > largeImageThreshold || height > largeImageThreshold)) {\r\n                skip = 6;\r\n            }\r\n\r\n            var pixel1 = { r: 0, g: 0, b: 0, a: 0 };\r\n            var pixel2 = { r: 0, g: 0, b: 0, a: 0 };\r\n\r\n            var skipTheRest = false;\r\n\r\n            loop(width, height, function (horizontalPos, verticalPos) {\r\n                if (skipTheRest) {\r\n                    return;\r\n                }\r\n\r\n                if (skip) {\r\n                    // only skip if the image isn't small\r\n                    if (verticalPos % skip === 0 || horizontalPos % skip === 0) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var offset = (verticalPos * width + horizontalPos) * 4;\r\n                if (!getPixelInfo(pixel1, data1, offset, 1) || !getPixelInfo(pixel2, data2, offset, 2)) {\r\n                    return;\r\n                }\r\n\r\n                var isWithinComparedArea = withinComparedArea(horizontalPos, verticalPos, width, height, pixel2);\r\n\r\n                if (ignoreColors) {\r\n                    addBrightnessInfo(pixel1);\r\n                    addBrightnessInfo(pixel2);\r\n\r\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\r\n                        if (!compareOnly) {\r\n                            copyGrayScalePixel(pix, offset, pixel2);\r\n                        }\r\n                    } else {\r\n                        if (!compareOnly) {\r\n                            errorPixel(pix, offset, pixel1, pixel2);\r\n                        }\r\n\r\n                        mismatchCount++;\r\n                        updateBounds(horizontalPos, verticalPos);\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if (isRGBSimilar(pixel1, pixel2) || !isWithinComparedArea) {\r\n                    if (!compareOnly) {\r\n                        copyPixel(pix, offset, pixel1);\r\n                    }\r\n                } else if (\r\n                    ignoreAntialiasing &&\r\n                    (addBrightnessInfo(pixel1), // jit pixel info augmentation looks a little weird, sorry.\r\n                    addBrightnessInfo(pixel2),\r\n                    isAntialiased(pixel1, data1, 1, verticalPos, horizontalPos, width) || isAntialiased(pixel2, data2, 2, verticalPos, horizontalPos, width))\r\n                ) {\r\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\r\n                        if (!compareOnly) {\r\n                            copyGrayScalePixel(pix, offset, pixel2);\r\n                        }\r\n                    } else {\r\n                        if (!compareOnly) {\r\n                            errorPixel(pix, offset, pixel1, pixel2);\r\n                        }\r\n\r\n                        mismatchCount++;\r\n                        updateBounds(horizontalPos, verticalPos);\r\n                    }\r\n                } else {\r\n                    if (!compareOnly) {\r\n                        errorPixel(pix, offset, pixel1, pixel2);\r\n                    }\r\n\r\n                    mismatchCount++;\r\n                    updateBounds(horizontalPos, verticalPos);\r\n                }\r\n\r\n                if (compareOnly) {\r\n                    var currentMisMatchPercent = (mismatchCount / (height * width)) * 100;\r\n\r\n                    if (currentMisMatchPercent > returnEarlyThreshold) {\r\n                        skipTheRest = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            data.rawMisMatchPercentage = (mismatchCount / (height * width)) * 100;\r\n            data.misMatchPercentage = data.rawMisMatchPercentage.toFixed(2);\r\n            data.diffBounds = diffBounds;\r\n            data.analysisTime = Date.now() - time;\r\n\r\n            data.getImageDataUrl = function (text) {\r\n                if (compareOnly) {\r\n                    throw Error(\"No diff image available - ran in compareOnly mode\");\r\n                }\r\n\r\n                var barHeight = 0;\r\n\r\n                if (text) {\r\n                    barHeight = addLabel(text, context, hiddenCanvas);\r\n                }\r\n\r\n                context.putImageData(imgd, 0, barHeight);\r\n\r\n                return hiddenCanvas.toDataURL(\"image/png\");\r\n            };\r\n\r\n            if (!compareOnly && hiddenCanvas.toBuffer) {\r\n                data.getBuffer = function (includeOriginal) {\r\n                    if (includeOriginal) {\r\n                        var imageWidth = hiddenCanvas.width + 2;\r\n                        hiddenCanvas.width = imageWidth * 3;\r\n                        context.putImageData(img1, 0, 0);\r\n                        context.putImageData(img2, imageWidth, 0);\r\n                        context.putImageData(imgd, imageWidth * 2, 0);\r\n                    } else {\r\n                        context.putImageData(imgd, 0, 0);\r\n                    }\r\n                    return hiddenCanvas.toBuffer();\r\n                };\r\n            }\r\n        }\r\n\r\n        function addLabel(text, context, hiddenCanvas) {\r\n            var textPadding = 2;\r\n\r\n            context.font = \"12px sans-serif\";\r\n\r\n            var textWidth = context.measureText(text).width + textPadding * 2;\r\n            var barHeight = 22;\r\n\r\n            if (textWidth > hiddenCanvas.width) {\r\n                hiddenCanvas.width = textWidth;\r\n            }\r\n\r\n            hiddenCanvas.height += barHeight;\r\n\r\n            context.fillStyle = \"#666\";\r\n            context.fillRect(0, 0, hiddenCanvas.width, barHeight - 4);\r\n            context.fillStyle = \"#fff\";\r\n            context.fillRect(0, barHeight - 4, hiddenCanvas.width, 4);\r\n\r\n            context.fillStyle = \"#fff\";\r\n            context.textBaseline = \"top\";\r\n            context.font = \"12px sans-serif\";\r\n            context.fillText(text, textPadding, 1);\r\n\r\n            return barHeight;\r\n        }\r\n\r\n        function normalise(img, w, h) {\r\n            var c;\r\n            var context;\r\n\r\n            if (img.height < h || img.width < w) {\r\n                c = createCanvas(w, h);\r\n                context = c.getContext(\"2d\");\r\n                context.putImageData(img, 0, 0);\r\n                return context.getImageData(0, 0, w, h);\r\n            }\r\n\r\n            return img;\r\n        }\r\n\r\n        function outputSettings(options) {\r\n            var key;\r\n\r\n            if (options.errorColor) {\r\n                for (key in options.errorColor) {\r\n                    if (options.errorColor.hasOwnProperty(key)) {\r\n                        errorPixelColor[key] = options.errorColor[key] === void 0 ? errorPixelColor[key] : options.errorColor[key];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (options.errorType && errorPixelTransform[options.errorType]) {\r\n                errorPixel = errorPixelTransform[options.errorType];\r\n                errorType = options.errorType;\r\n            }\r\n\r\n            if (options.errorPixel && typeof options.errorPixel === \"function\") {\r\n                errorPixel = options.errorPixel;\r\n            }\r\n\r\n            pixelTransparency = isNaN(Number(options.transparency)) ? pixelTransparency : options.transparency;\r\n\r\n            if (options.largeImageThreshold !== undefined) {\r\n                largeImageThreshold = options.largeImageThreshold;\r\n            }\r\n\r\n            if (options.useCrossOrigin !== undefined) {\r\n                useCrossOrigin = options.useCrossOrigin;\r\n            }\r\n\r\n            if (options.boundingBox !== undefined) {\r\n                boundingBoxes = [options.boundingBox];\r\n            }\r\n\r\n            if (options.ignoredBox !== undefined) {\r\n                ignoredBoxes = [options.ignoredBox];\r\n            }\r\n\r\n            if (options.boundingBoxes !== undefined) {\r\n                boundingBoxes = options.boundingBoxes;\r\n            }\r\n\r\n            if (options.ignoredBoxes !== undefined) {\r\n                ignoredBoxes = options.ignoredBoxes;\r\n            }\r\n\r\n            if (options.ignoreAreasColoredWith !== undefined) {\r\n                ignoreAreasColoredWith = options.ignoreAreasColoredWith;\r\n            }\r\n        }\r\n\r\n        function compare(one, two) {\r\n            if (globalOutputSettings !== oldGlobalSettings) {\r\n                outputSettings(globalOutputSettings);\r\n            }\r\n\r\n            function onceWeHaveBoth() {\r\n                var width;\r\n                var height;\r\n                if (images.length === 2) {\r\n                    if (images[0].error || images[1].error) {\r\n                        data = {};\r\n                        data.error = images[0].error ? images[0].error : images[1].error;\r\n                        triggerDataUpdate();\r\n                        return;\r\n                    }\r\n                    width = images[0].width > images[1].width ? images[0].width : images[1].width;\r\n                    height = images[0].height > images[1].height ? images[0].height : images[1].height;\r\n\r\n                    if (images[0].width === images[1].width && images[0].height === images[1].height) {\r\n                        data.isSameDimensions = true;\r\n                    } else {\r\n                        data.isSameDimensions = false;\r\n                    }\r\n\r\n                    data.dimensionDifference = {\r\n                        width: images[0].width - images[1].width,\r\n                        height: images[0].height - images[1].height\r\n                    };\r\n\r\n                    analyseImages(normalise(images[0], width, height), normalise(images[1], width, height), width, height);\r\n\r\n                    triggerDataUpdate();\r\n                }\r\n            }\r\n\r\n            images = [];\r\n            loadImageData(one, onceWeHaveBoth);\r\n            loadImageData(two, onceWeHaveBoth);\r\n        }\r\n\r\n        function getCompareApi(param) {\r\n            var secondFileData;\r\n            var hasMethod = typeof param === \"function\";\r\n\r\n            if (!hasMethod) {\r\n                // assume it's file data\r\n                secondFileData = param;\r\n            }\r\n\r\n            var self = {\r\n                setReturnEarlyThreshold: function (threshold) {\r\n                    if (threshold) {\r\n                        compareOnly = true;\r\n                        returnEarlyThreshold = threshold;\r\n                    }\r\n                    return self;\r\n                },\r\n                scaleToSameSize: function () {\r\n                    scaleToSameSize = true;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                useOriginalSize: function () {\r\n                    scaleToSameSize = false;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                ignoreNothing: function () {\r\n                    tolerance.red = 0;\r\n                    tolerance.green = 0;\r\n                    tolerance.blue = 0;\r\n                    tolerance.alpha = 0;\r\n                    tolerance.minBrightness = 0;\r\n                    tolerance.maxBrightness = 255;\r\n\r\n                    ignoreAntialiasing = false;\r\n                    ignoreColors = false;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                ignoreLess: function () {\r\n                    tolerance.red = 16;\r\n                    tolerance.green = 16;\r\n                    tolerance.blue = 16;\r\n                    tolerance.alpha = 16;\r\n                    tolerance.minBrightness = 16;\r\n                    tolerance.maxBrightness = 240;\r\n\r\n                    ignoreAntialiasing = false;\r\n                    ignoreColors = false;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                ignoreAntialiasing: function () {\r\n                    tolerance.red = 32;\r\n                    tolerance.green = 32;\r\n                    tolerance.blue = 32;\r\n                    tolerance.alpha = 32;\r\n                    tolerance.minBrightness = 64;\r\n                    tolerance.maxBrightness = 96;\r\n\r\n                    ignoreAntialiasing = true;\r\n                    ignoreColors = false;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                ignoreColors: function () {\r\n                    tolerance.alpha = 16;\r\n                    tolerance.minBrightness = 16;\r\n                    tolerance.maxBrightness = 240;\r\n\r\n                    ignoreAntialiasing = false;\r\n                    ignoreColors = true;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                ignoreAlpha: function () {\r\n                    tolerance.red = 16;\r\n                    tolerance.green = 16;\r\n                    tolerance.blue = 16;\r\n                    tolerance.alpha = 255;\r\n                    tolerance.minBrightness = 16;\r\n                    tolerance.maxBrightness = 240;\r\n\r\n                    ignoreAntialiasing = false;\r\n                    ignoreColors = false;\r\n\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                repaint: function () {\r\n                    if (hasMethod) {\r\n                        param();\r\n                    }\r\n                    return self;\r\n                },\r\n                outputSettings: function (options) {\r\n                    outputSettings(options);\r\n                    return self;\r\n                },\r\n                onComplete: function (callback) {\r\n                    updateCallbackArray.push(callback);\r\n\r\n                    var wrapper = function () {\r\n                        compare(fileData, secondFileData);\r\n                    };\r\n\r\n                    wrapper();\r\n\r\n                    return getCompareApi(wrapper);\r\n                }\r\n            };\r\n\r\n            return self;\r\n        }\r\n\r\n        var rootSelf = {\r\n            onComplete: function (callback) {\r\n                updateCallbackArray.push(callback);\r\n                loadImageData(fileData, function (imageData, width, height) {\r\n                    parseImage(imageData.data, width, height);\r\n                });\r\n            },\r\n            compareTo: function (secondFileData) {\r\n                return getCompareApi(secondFileData);\r\n            },\r\n            outputSettings: function (options) {\r\n                outputSettings(options);\r\n                return rootSelf;\r\n            }\r\n        };\r\n\r\n        return rootSelf;\r\n    };\r\n\r\n    function setGlobalOutputSettings(settings) {\r\n        globalOutputSettings = settings;\r\n        return resemble;\r\n    }\r\n\r\n    function applyIgnore(api, ignore) {\r\n        switch (ignore) {\r\n            case \"nothing\":\r\n                api.ignoreNothing();\r\n                break;\r\n            case \"less\":\r\n                api.ignoreLess();\r\n                break;\r\n            case \"antialiasing\":\r\n                api.ignoreAntialiasing();\r\n                break;\r\n            case \"colors\":\r\n                api.ignoreColors();\r\n                break;\r\n            case \"alpha\":\r\n                api.ignoreAlpha();\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid ignore: \" + ignore);\r\n        }\r\n    }\r\n\r\n    resemble.compare = function (image1, image2, options, cb) {\r\n        var callback;\r\n        var opt;\r\n\r\n        if (typeof options === \"function\") {\r\n            callback = options;\r\n            opt = {};\r\n        } else {\r\n            callback = cb;\r\n            opt = options || {};\r\n        }\r\n\r\n        var res = resemble(image1);\r\n        var compare;\r\n\r\n        if (opt.output) {\r\n            res.outputSettings(opt.output);\r\n        }\r\n\r\n        compare = res.compareTo(image2);\r\n\r\n        if (opt.returnEarlyThreshold) {\r\n            compare.setReturnEarlyThreshold(opt.returnEarlyThreshold);\r\n        }\r\n\r\n        if (opt.scaleToSameSize) {\r\n            compare.scaleToSameSize();\r\n        }\r\n\r\n        if (typeof opt.ignore === \"string\") {\r\n            applyIgnore(compare, opt.ignore);\r\n        } else if (opt.ignore && opt.ignore.forEach) {\r\n            opt.ignore.forEach(function (v) {\r\n                applyIgnore(compare, v);\r\n            });\r\n        }\r\n\r\n        compare.onComplete(function (data) {\r\n            if (data.error) {\r\n                callback(data.error);\r\n            } else {\r\n                callback(null, data);\r\n            }\r\n        });\r\n    };\r\n\r\n    resemble.outputSettings = setGlobalOutputSettings;\r\n    return resemble;\r\n});\r\n","/*! simple-concat. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function (stream, cb) {\n  var chunks = []\n  stream.on('data', function (chunk) {\n    chunks.push(chunk)\n  })\n  stream.once('end', function () {\n    if (cb) cb(null, Buffer.concat(chunks))\n    cb = null\n  })\n  stream.once('error', function (err) {\n    if (cb) cb(err)\n    cb = null\n  })\n}\n","module.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","const core = require('@actions/core');\nconst path = require('path');\nconst utils = require('./utils');\n\nasync function run() {\n  try {\n    const imgPath1 = core.getInput('img_1');\n    const imgPath2 = core.getInput('img_2');\n    const errorColorString = core.getInput('error_color');\n    const maskPath = core.getInput('mask');\n    const ignoredBoxSting = core.getInput('ignored_box');\n    \n    // TODO: Produce boxes based on mask....\n\n    const errorColorObj = utils.parseColorOption(errorColorString);\n    const boxObj = utils.parseBoxOption(boxSting);\n\n    let options = {\n      output: {\n          errorColor: errorColorObj,\n          ignoredBox: boxObj,\n          errorType: \"flat\",\n          //transparency: 0.3,\n          largeImageThreshold: 0,\n          useCrossOrigin: false,\n          outputDiff: true,\n      },\n      scaleToSameSize: true,\n      ignore: \"antialiasing\"\n  };\n    \n    let data = utils.getDiff(imgPath1, imgPath2, options);\n\n    const img1Name = path.basename(imgPath1, path.extname(imgPath1));\n    const img2Name = path.basename(imgPath2, path.extname(imgPath2));\n    core.info(`The second image \"${img2Name}\" is ${data.misMatchPercentage}% different compared to the first image \"${img1Name}\".`);\n    \n    core.setOutput('img-diff', data.getBuffer());\n    core.setOutput('mismatch', data.misMatchPercentage);\n\n  }\n  catch (error) {\n    core.setFailed(error.message);\n  }\n}\n\nrun()\n","const fs = require('fs');\nconst compareImages = require(\"resemblejs/compareImages\");\n\nasync function getDiff(imgPath1, imgPath2, options) {\n    \n    // The parameters can be Node Buffers\n    // data is the same as usual with an additional getBuffer() function\n    const data = await compareImages(\n        await fs.promises.readFile(imgPath1),\n        await fs.promises.readFile(imgPath2),\n        options\n    );\n\n    //await fs.promises.writeFile(\"./output.png\", data.getBuffer());\n    return data;\n}\n\nfunction parseColorOption(colorString) {\n    let rgbArray = colorString.split(',').map((item) => item.trim());\n    let color = {\n        red: rgbArray[0],\n        green: rgbArray[1],\n        blue: rgbArray[2]\n    }\n    return color;\n}\n\nfunction parseBoxOption(boxString) {\n    let boxList = boxString.split(',').map((item) => item.trim());\n    const box = {\n        top: boxList[0],\n        right: boxList[1],\n        bottom: boxList[2],\n        left: boxList[3]\n      };\n    return box;\n}\n\nmodule.exports = {\n    parseColorOption,\n    parseBoxOption,\n    getDiff,\n};","module.exports = __non_webpack_require__(__webpack_require__.ab + \"build/Release/canvas.node\")","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(351);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnelHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AChpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC3CA;AACA;A;;;;;;;;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;ACDA;AACA;AACA;AACA;;A","sourceRoot":""}